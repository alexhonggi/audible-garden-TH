# 이상적인 실행 옵션 및 설명

이 파일은 `fixed_turntable.py`를 실행할 때 권장되는 기본 옵션들을 설명합니다.
GUI 버전을 개발할 때 이 설정들을 기본값으로 고려할 수 있습니다.

## 실행 명령어 예시
```bash
conda activate garden && python fixed_turntable.py --roi_mode circular --skip 30 --rpm 2.5 --resolution 1280x720 --show_full y --record_score y
```

## 각 옵션 설명

| 옵션                  | 값            | 의미                                                                 |
| --------------------- | -------------- | -------------------------------------------------------------------- |
| `--roi_mode`          | `circular`     | **원형 ROI 모드 사용**: 턴테이블 중심을 자동으로 감지하고 반지름 방향으로 스캔합니다. 실제 턴테이블과 가장 유사한 방식입니다. |
| `--skip`              | `30`           | **프레임 건너뛰기**: 30프레임마다 한 번씩만 MIDI 데이터를 처리하고 전송합니다. CPU 사용량을 크게 줄여 안정적인 구동을 돕습니다. |
| `--rpm`               | `2.5`          | **분당 회전수**: 턴테이블이 1분에 2.5번 회전하는 속도를 기본으로 설정합니다. (`--detect_rpm y` 사용 시 이 값은 감지된 값으로 대체됩니다.) |
| `--resolution`        | `1280x720`     | **카메라 해상도**: HD급(720p) 해상도를 사용합니다. 대부분의 웹캠에서 안정적으로 지원하며, 처리 성능과 화질 사이의 균형이 좋습니다. |
| `--show_full`         | `y`            | **전체 화면 표시**: ROI 영역뿐만 아니라 전체 카메라 화면에 모든 정보를 오버레이하여 보여줍니다. 현재 상태를 파악하기에 용이합니다. |
| `--record_score`      | `y`            | **첫 바퀴 악보 녹음**: 프로그램 시작 후 첫 번째 바퀴가 완료되면 해당 데이터를 `images` 폴더에 자동으로 저장합니다. |

---
**요약**: 이 설정은 **성능과 안정성**에 중점을 둡니다. `--skip 30` 옵션으로 CPU 부담을 줄이고, `--roi_mode circular`로 가장 진보된 기능을 사용하며, `--record_score y`로 모든 작업을 기록하는, 가장 균형 잡힌 기본 설정입니다. 